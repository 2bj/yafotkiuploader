#!/usr/bin/env python
# -*- coding: utf-8 -*-

import logging
logging.basicConfig(filename='yafotkifs.log', level=logging.DEBUG)

import os
import stat
import errno
import fuse
import getpass
import YaFotkiLib
from fuse import Fuse

logger = logging.getLogger('yafotkifs')

fuse.fuse_python_api = (0, 2)

hello_path = '/hello'
hello_str = 'Hello World!\n'
g_password = ''

class MyStat(fuse.Stat):
    def __init__(self):
        self.st_mode = 0
        self.st_ino = 0
        self.st_dev = 0
        self.st_nlink = 0
        self.st_uid = 0
        self.st_gid = 0
        self.st_size = 0
        self.st_atime = 0
        self.st_mtime = 0
        self.st_ctime = 0

def init_uploader():
    yafotki = YaFotkiLib.Uploader(
            username='alexander-artemenko',
            password=g_password,
            cookies_cache = '/tmp/cookies.ya',
            )
    yafotki.auth()
    return yafotki

class YaFotkiFS(Fuse):
    def __init__(self, version, usage, dash_s_do):
        super(YaFotkiFS, self).__init__(version=version, usage=usage, dash_s_do=dash_s_do)
        self.__albums = None
        self.__yafotki = init_uploader()

    def getattr(self, path):
        logger.debug('getattr for %s' % path)
        st = MyStat()
        if path == '/':
            st.st_mode = stat.S_IFDIR | 0755
            st.st_nlink = 2
        elif 1: # path == hello_path:
            st.st_mode = stat.S_IFREG | 0444
            st.st_nlink = 1
            st.st_size = len(hello_str)
        else:
            return -errno.ENOENT
        return st

    def __get_albums(self):
        if getattr(self, '__albums', None) is None:
            self.__albums = dict([(a[1], a[0]) for a in self.__yafotki.get_albums()])
        return self.__albums

    def readdir(self, path, offset):
        logger.debug('readdir with path=%s and offset=%s' % (path, offset))
        try:
            albums = self.__get_albums()
            for a in ['.','..'] + albums.keys():
                logger.debug('album: %s' % a)
                yield fuse.Direntry(str(a.encode('utf8')))
            logger.debug('end')
        except Exception, e:
            logger.error(e)

    def open(self, path, flags):
        logger.debug('open for path %s with flags=%s' % (path, flags))
        if path != hello_path:
            return -errno.ENOENT
        accmode = os.O_RDONLY | os.O_WRONLY | os.O_RDWR
        if (flags & accmode) != os.O_RDONLY:
            return -errno.EACCES

    def read(self, path, size, offset):
        logger.debug('reading path=%s, size=%s, offset=%s' % (path, size, offset))
        if path != hello_path:
            return -errno.ENOENT
        slen = len(hello_str)
        if offset < slen:
            if offset + size > slen:
                size = slen - offset
            buf = hello_str[offset:offset+size]
        else:
            buf = ''
        return buf

def main():
    usage="""
Userspace hello example

""" + Fuse.fusage
    global g_password
    g_password = getpass.getpass()
    logger.info('mount')
    server = YaFotkiFS(version="%prog " + fuse.__version__,
                     usage=usage,
                     dash_s_do='setsingle')

    server.parse(errex=1)
    server.main()

if __name__ == '__main__':
    main()
